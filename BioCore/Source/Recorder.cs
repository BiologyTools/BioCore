namespace BioCore
{
    public partial class Recorder : Form
    {
        public static string log;
        public static void AddLine(string s)
        {
            log += s + Environment.NewLine;
        }
        public static Recorder recorder = null;
        public static bool recordMicroscope = true;
        public Recorder()
        {
            InitializeComponent();
        }

        /// This function clears the textbox and the log variable
        /// 
        /// @param sender The object that raised the event.
        /// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void clearBut_Click(object sender, EventArgs e)
        {
            textBox.Clear();
            log = "";
        }

/// It takes the text in the textbox, splits it into an array of strings, then creates a new array of
/// strings that is one element shorter than the original array, and then copies the original array into
/// the new array, and then sets the textbox's text to the new array
/// 
/// @param sender The object that raised the event.
/// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void delLineBut_Click(object sender, EventArgs e)
        {
            string[] sts = textBox.Lines;
            string[] st = new string[sts.Length - 1];
            for (int i = 0; i < st.Length; i++)
            {
                st[i] = sts[i];
            }
            textBox.Lines = st;
        }

        /// If the user tries to close the form, the form will minimize instead
        /// 
        /// @param sender The object that raised the event.
        /// @param FormClosingEventArgs The event data generated by the FormClosing event.
        private void Recorder_FormClosing(object sender, FormClosingEventArgs e)
        {
            e.Cancel = true;
            this.WindowState = FormWindowState.Minimized;
        }

        /// The textBox_TextChanged function is called whenever the text in the textBox is changed
        /// 
        /// @param sender The object that raised the event.
        /// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void textBox_TextChanged(object sender, EventArgs e)
        {
            // update = true;
            // log = textBox.Text;
        }

        /// If the topMostBox checkbox is checked, then the form will be topmost
        /// 
        /// @param sender The object that raised the event.
        /// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void topMostBox_CheckedChanged(object sender, EventArgs e)
        {
            this.TopMost = topMostBox.Checked;
        }

        /// When the recorder is activated, the textbox is set to the log
        /// 
        /// @param sender The object that raised the event.
        /// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void Recorder_Activated(object sender, EventArgs e)
        {
            textBox.Text = log;
        }

        /// If the checkbox is checked, then the variable recordMicroscope is set to true
        /// 
        /// @param sender The object that raised the event.
        /// @param EventArgs The EventArgs class is the base class for classes containing event data.
        private void microRecBox_CheckedChanged(object sender, EventArgs e)
        {
            recordMicroscope = microRecBox.Checked;
        }
    }
}
